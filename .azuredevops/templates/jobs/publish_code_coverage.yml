parameters:
- name: python_version
  default: 3.8
- name: vm_image
  default: ubuntu-20.04

# variables:
# - name: DATABRICKS_WORKSPACE_URL
#   value: $(databricks_workspace_url)
# - name: DATABRICKS_TOKEN
#   value: dapi1234
# - name: PIPELINE_ID
#   value: $(System.TeamProjectId)_$(System.DefinitionId)_$(Build.BuildNumber)
# - name: TEST_CODE_PATH_ON_DBFS
#   value: /FileStore/unit

jobs:
- job: publish_test_results
  pool:
    vmImage: ${{ parameters.vm_image }}
  variables:
    DATABRICKS_JOB_ID: $[ stageDependencies.ExecuteDatabricksWorkflowsForTest.execute_databricks_test_workflow.outputs['execute_databricks_test_workflow.databricks_job_id'] ]
  steps:
  - task: UsePythonVersion@0
    displayName: 'Use Python ${{ parameters.python_version }}'
    inputs:
      versionSpec: ${{ parameters.python_version }}

  - task: CmdLine@2
    displayName: 'Install libraries'
    inputs:
      script: |
        pip install databricks-cli pytest pytest-cov
  - task: CmdLine@2
    displayName: 'Copy test results from databricks'
    inputs:
      script: |
        databricks fs cp -r dbfs:$(TEST_CODE_PATH_ON_DBFS)/$(PIPELINE_ID)/.test_results . --overwrite
    env:
      DATABRICKS_TOKEN: $(DATABRICKS_TOKEN)
      DATABRICKS_HOST: $(DATABRICKS_WORKSPACE_URL)
  - task: CmdLine@2
    displayName: 'combine coverage files and create XML reports'
    inputs:
      script: |
        coverage combine
        coverage xml
  - task: PublishCodeCoverageResults@1
    displayName: 'Publish code coverage results'
    condition: succeededOrFailed()
    inputs:
      codeCoverageTool: Cobertura
      summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/coverage.xml'
      pathToSources:  $(System.DefaultWorkingDirectory)/src/